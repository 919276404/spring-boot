<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>com.dajia</groupId>
        <artifactId>dajia-analysis</artifactId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>

    <artifactId>dajia-analysis-provider</artifactId>

    <dependencies>
        <dependency>
            <groupId>com.dajia</groupId>
            <artifactId>dajia-springboot-provider</artifactId>
        </dependency>

        <!--&lt;!&ndash; 使用 redis &ndash;&gt;
        <dependency>
            <groupId>com.dajia</groupId>
            <artifactId>dajia-springboot-redis</artifactId>
        </dependency>

        &lt;!&ndash; 使用 mysql &ndash;&gt;
        <dependency>
            <groupId>com.dajia</groupId>
            <artifactId>dajia-springboot-mysql</artifactId>
        </dependency>

        &lt;!&ndash; 使用 mongodb &ndash;&gt;
        <dependency>
            <groupId>com.dajia</groupId>
            <artifactId>dajia-springboot-mongodb</artifactId>
        </dependency>

        &lt;!&ndash; 使用 dubbo &ndash;&gt;
        <dependency>
            <groupId>com.dajia</groupId>
            <artifactId>dajia-springboot-dubbo-provider</artifactId>
        </dependency>
-->
        <dependency>
            <groupId>com.dajia</groupId>
            <artifactId>dajia-analysis-api</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <jvmArguments>-Dfile.encoding=${file.encoding}</jvmArguments>
                    <!--fork :  如果没有该项配置，肯呢个devtools不会起作用，即应用不会restart -->
                    <fork>true</fork>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${file.encoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>${file.encoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includeScope>compile</includeScope>
                    <overWriteReleases>true</overWriteReleases>
                    <overWriteSnapshots>true</overWriteSnapshots>
                    <failOnWarning>false</failOnWarning>
                    <overWriteIfNewer>true</overWriteIfNewer>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-cli</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <!-- 打包lib目录，包含jar和class start -->
                                <zip destfile="${project.build.directory}/${project.artifactId}-classesAndLib.zip" update="true" encoding="${file.encoding}">
                                    <zipfileset dir="${project.build.directory}/dependency" casesensitive="no">
                                        <include name="**/*.jar" />
                                    </zipfileset>
                                </zip>
                                <zip destfile="${project.build.directory}/${project.artifactId}-classesAndLib.zip" update="true" encoding="${file.encoding}">
                                    <zipfileset dir="${project.build.outputDirectory}" casesensitive="no" prefix="classes">
                                        <exclude name="**/spring-quartz.xml" />
                                        <exclude name="**/spring-jmx-listener.xml" />
                                    </zipfileset>
                                </zip>
                                <!-- 打包lib目录，包含jar和class end -->
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>complete</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-cli</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <!-- 整个工程打包，包含bin、conf和lib目录 start -->
                                        <zip destfile="${project.build.directory}/${project.artifactId}.zip" update="true" encoding="${file.encoding}">
                                            <zipfileset dir="src/main/assembly/bin" casesensitive="no" prefix="bin">
                                                <include name="**/*.*" />
                                            </zipfileset>
                                        </zip>
                                        <zip destfile="${project.build.directory}/${project.artifactId}.zip" update="true" encoding="${file.encoding}">
                                            <zipfileset dir="${project.build.directory}/dependency" casesensitive="no" prefix="lib">
                                                <include name="**/*.jar" />
                                            </zipfileset>
                                        </zip>
                                        <zip destfile="${project.build.directory}/${project.artifactId}.zip" update="true" encoding="${file.encoding}">
                                            <zipfileset dir="${project.build.outputDirectory}" casesensitive="no" prefix="lib/classes">
                                                <exclude name="**/spring-quartz.xml" />
                                                <exclude name="**/spring-jmx-listener.xml" />
                                            </zipfileset>
                                        </zip>
                                        <!-- 整个工程打包，包含bin、conf和lib目录 end -->
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    
</project>
